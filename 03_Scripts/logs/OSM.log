15:05:29 WARNING  is when this event was logged.
15:05:29 INFO     
    DROP TABLE IF EXISTS optimal_plant_residual_750kw;
CREATE TABLE optimal_plant_residual_750kw AS
    SELECT a.id_aggregate, a.id_target, a.id_building, b.rank, a.length, a.plant_capacity,
        a.manure, a.crop_production, a.live_methane, a.crop_methane,
        a.methane_750kw AS methane_750kw, a.cost_750kw AS cost_750kw
    FROM plants_costs_750kw AS a
    LEFT JOIN plants_costs_total AS b
    ON a.id_target = b.id_target
    WHERE a.plant_capacity <= 750
    ;
    
15:05:30 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_750kw;
CREATE TABLE optimal_plant_location_750kw AS
    		SELECT  id_target, rank, methane_750kw, cost_750kw, geom
            FROM plants_costs_total
            WHERE 0 > 1
            ;
    
15:05:30 INFO     ALTER TABLE optimal_plant_location_750kw ADD COLUMN  plant_capacity int;
15:05:30 INFO     UPDATE optimal_plant_location_750kw a SET plant_capacity = 750;
15:05:30 INFO     ALTER TABLE optimal_plant_location_750kw ADD COLUMN  id_order SERIAL PRIMARY KEY;
15:05:30 INFO     DROP TABLE IF EXISTS optimal_plant_links_750kw;
CREATE TABLE optimal_plant_links_750kw (id_aggregate int, id_target int, id_building int, plant_capacity int);
15:05:30 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_750kw) AS methane_750kw,
            SUM (cost_750kw) AS cost_750kw
            FROM optimal_plant_residual_750kw
            WHERE  plant_capacity <=  750
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_750kw, a.cost_750kw, 750 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:31 INFO     
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
15:05:31 INFO     found plant 
15:05:31 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_750kw, cost_750kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:31 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 750 AND methane_750kw < 1404000.0
        ;
    
15:05:31 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 750
        )
        ;
    
15:05:31 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
            WHERE plant_capacity <= 750
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_750kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_750kw
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_750kw = b.methane_750kw,
            cost_750kw = b.cost_750kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:34 DEBUG    plant capacity: 750 	 iteration: 1 	 rank: 3
15:05:34 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_750kw) AS methane_750kw,
            SUM (cost_750kw) AS cost_750kw
            FROM optimal_plant_residual_750kw
            WHERE  plant_capacity <=  750
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_750kw, a.cost_750kw, 750 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:34 INFO     
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 3
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
15:05:34 INFO     found plant 
15:05:34 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_750kw, cost_750kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 3
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:34 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 750 AND methane_750kw < 1404000.0
        ;
    
15:05:34 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 750
        )
        ;
    
15:05:34 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
            WHERE plant_capacity <= 750
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_750kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_750kw
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_750kw = b.methane_750kw,
            cost_750kw = b.cost_750kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:37 DEBUG    plant capacity: 750 	 iteration: 2 	 rank: 3
15:05:37 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_750kw) AS methane_750kw,
            SUM (cost_750kw) AS cost_750kw
            FROM optimal_plant_residual_750kw
            WHERE  plant_capacity <=  750
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_750kw, a.cost_750kw, 750 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:37 INFO     
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 3
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
15:05:37 INFO     found plant 
15:05:37 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_750kw, cost_750kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 3
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:37 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 750 AND methane_750kw < 1404000.0
        ;
    
15:05:38 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 750
        )
        ;
    
15:05:38 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
            WHERE plant_capacity <= 750
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_750kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_750kw
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_750kw = b.methane_750kw,
            cost_750kw = b.cost_750kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:39 DEBUG    plant capacity: 750 	 iteration: 3 	 rank: 3
15:05:39 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_750kw) AS methane_750kw,
            SUM (cost_750kw) AS cost_750kw
            FROM optimal_plant_residual_750kw
            WHERE  plant_capacity <=  750
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_750kw, a.cost_750kw, 750 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:39 INFO     
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 3
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
15:05:39 INFO     found plant 
15:05:39 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_750kw, cost_750kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 3
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:39 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 750 AND methane_750kw < 1404000.0
        ;
    
15:05:39 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 750
        )
        ;
    
15:05:40 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
            WHERE plant_capacity <= 750
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_750kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_750kw
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_750kw = b.methane_750kw,
            cost_750kw = b.cost_750kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:41 DEBUG    plant capacity: 750 	 iteration: 4 	 rank: 3
15:05:41 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_750kw) AS methane_750kw,
            SUM (cost_750kw) AS cost_750kw
            FROM optimal_plant_residual_750kw
            WHERE  plant_capacity <=  750
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_750kw, a.cost_750kw, 750 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:41 INFO     
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 3
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
15:05:41 DEBUG    no more plants for the rank 3
15:05:41 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 750 AND methane_750kw < 1404000.0
        ;
    
15:05:41 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 750
        )
        ;
    
15:05:41 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
            WHERE plant_capacity <= 750
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_750kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_750kw
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_750kw = b.methane_750kw,
            cost_750kw = b.cost_750kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:42 DEBUG    plant capacity: 750 	 iteration: 5 	 rank: 2
15:05:42 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_750kw) AS methane_750kw,
            SUM (cost_750kw) AS cost_750kw
            FROM optimal_plant_residual_750kw
            WHERE  plant_capacity <=  750
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_750kw, a.cost_750kw, 750 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:43 INFO     
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 2
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
15:05:43 INFO     found plant 
15:05:43 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_750kw, cost_750kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 2
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:43 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 750 AND methane_750kw < 1404000.0
        ;
    
15:05:43 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 750
        )
        ;
    
15:05:43 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
            WHERE plant_capacity <= 750
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_750kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_750kw
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_750kw = b.methane_750kw,
            cost_750kw = b.cost_750kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:43 DEBUG    plant capacity: 750 	 iteration: 6 	 rank: 2
15:05:43 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_750kw) AS methane_750kw,
            SUM (cost_750kw) AS cost_750kw
            FROM optimal_plant_residual_750kw
            WHERE  plant_capacity <=  750
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_750kw, a.cost_750kw, 750 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:44 INFO     
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 2
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
15:05:44 INFO     found plant 
15:05:44 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_750kw, cost_750kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 2
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:44 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 750 AND methane_750kw < 1404000.0
        ;
    
15:05:44 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 750
        )
        ;
    
15:05:44 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
            WHERE plant_capacity <= 750
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_750kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_750kw
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_750kw = b.methane_750kw,
            cost_750kw = b.cost_750kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:44 DEBUG    plant capacity: 750 	 iteration: 7 	 rank: 2
15:05:44 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_750kw) AS methane_750kw,
            SUM (cost_750kw) AS cost_750kw
            FROM optimal_plant_residual_750kw
            WHERE  plant_capacity <=  750
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_750kw, a.cost_750kw, 750 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:44 INFO     
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 2
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
15:05:44 INFO     found plant 
15:05:44 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_750kw, cost_750kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 2
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:44 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 750 AND methane_750kw < 1404000.0
        ;
    
15:05:45 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 750
        )
        ;
    
15:05:45 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
            WHERE plant_capacity <= 750
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_750kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_750kw
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_750kw = b.methane_750kw,
            cost_750kw = b.cost_750kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:45 DEBUG    plant capacity: 750 	 iteration: 8 	 rank: 2
15:05:45 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_750kw) AS methane_750kw,
            SUM (cost_750kw) AS cost_750kw
            FROM optimal_plant_residual_750kw
            WHERE  plant_capacity <=  750
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_750kw, a.cost_750kw, 750 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:45 INFO     
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 2
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
15:05:45 DEBUG    no more plants for the rank 2
15:05:45 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 750 AND methane_750kw < 1404000.0
        ;
    
15:05:45 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 750
        )
        ;
    
15:05:46 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
            WHERE plant_capacity <= 750
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_750kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_750kw
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_750kw = b.methane_750kw,
            cost_750kw = b.cost_750kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:46 DEBUG    plant capacity: 750 	 iteration: 9 	 rank: 1
15:05:46 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_750kw) AS methane_750kw,
            SUM (cost_750kw) AS cost_750kw
            FROM optimal_plant_residual_750kw
            WHERE  plant_capacity <=  750
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_750kw, a.cost_750kw, 750 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:46 INFO     
		SELECT id_target, rank, methane_750kw, cost_750kw, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_750kw > 1404000.0 AND cost_750kw > 0 AND rank = 1
        
        ORDER BY cost_750kw ASC
        LIMIT 1
            ;
    
15:05:46 DEBUG    no more plants for the rank 1
15:05:46 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 750 AND methane_750kw < 1404000.0
        ;
    
15:05:46 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 750
        )
        ;
    
15:05:47 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
            WHERE plant_capacity <= 750
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_750kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_750kw
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_750kw = b.methane_750kw,
            cost_750kw = b.cost_750kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:47 DEBUG    plant capacity: 750 	 iteration: 10 	 rank: 0
15:05:47 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_750kw;
CREATE TABLE optimal_plant_map_750kw AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_750kw AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
15:05:48 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:05:48 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:05:49 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:05:51 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:05:51 INFO     
    DROP TABLE IF EXISTS optimal_plant_residual_500kw;
CREATE TABLE optimal_plant_residual_500kw AS
    SELECT a.id_aggregate, a.id_target, a.id_building, b.rank, a.length, a.plant_capacity,
        a.manure, a.crop_production, a.live_methane, a.crop_methane,
        a.methane_500kw AS methane_500kw, a.cost_500kw AS cost_500kw
    FROM plants_costs_500kw AS a
    LEFT JOIN plants_costs_total AS b
    ON a.id_target = b.id_target
    WHERE a.plant_capacity <= 500
    ;
    
15:05:52 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_500kw;
CREATE TABLE optimal_plant_location_500kw AS
    		SELECT  id_target, rank, methane_500kw, cost_500kw, geom
            FROM plants_costs_total
            WHERE 0 > 1
            ;
    
15:05:52 INFO     ALTER TABLE optimal_plant_location_500kw ADD COLUMN  plant_capacity int;
15:05:52 INFO     UPDATE optimal_plant_location_500kw a SET plant_capacity = 500;
15:05:52 INFO     ALTER TABLE optimal_plant_location_500kw ADD COLUMN  id_order SERIAL PRIMARY KEY;
15:05:52 INFO     DROP TABLE IF EXISTS optimal_plant_links_500kw;
CREATE TABLE optimal_plant_links_500kw (id_aggregate int, id_target int, id_building int, plant_capacity int);
15:05:52 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:52 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:05:52 INFO     found plant 
15:05:52 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:52 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:05:52 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:05:52 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:54 DEBUG    plant capacity: 500 	 iteration: 1 	 rank: 3
15:05:54 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:54 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 3
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:05:54 INFO     found plant 
15:05:54 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 3
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:54 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:05:54 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:05:54 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:55 DEBUG    plant capacity: 500 	 iteration: 2 	 rank: 3
15:05:55 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:56 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 3
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:05:56 INFO     found plant 
15:05:56 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 3
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:56 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:05:56 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:05:56 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:58 DEBUG    plant capacity: 500 	 iteration: 3 	 rank: 3
15:05:58 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:58 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 3
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:05:58 INFO     found plant 
15:05:58 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 3
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:05:58 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:05:58 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:05:58 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:05:59 DEBUG    plant capacity: 500 	 iteration: 4 	 rank: 3
15:05:59 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:05:59 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 3
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:05:59 DEBUG    no more plants for the rank 3
15:05:59 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:05:59 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:05:59 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:00 DEBUG    plant capacity: 500 	 iteration: 5 	 rank: 2
15:06:00 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:00 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:06:00 INFO     found plant 
15:06:00 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:00 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:06:00 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:06:01 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:02 DEBUG    plant capacity: 500 	 iteration: 6 	 rank: 2
15:06:02 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:02 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:06:02 INFO     found plant 
15:06:02 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:02 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:06:02 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:06:02 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:03 DEBUG    plant capacity: 500 	 iteration: 7 	 rank: 2
15:06:03 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:03 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:06:03 INFO     found plant 
15:06:03 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:03 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:06:03 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:06:03 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:04 DEBUG    plant capacity: 500 	 iteration: 8 	 rank: 2
15:06:04 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:04 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:06:04 INFO     found plant 
15:06:04 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:04 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:06:04 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:06:04 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:05 DEBUG    plant capacity: 500 	 iteration: 9 	 rank: 2
15:06:05 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:05 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:06:05 INFO     found plant 
15:06:05 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:05 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:06:05 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:06:06 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:06 DEBUG    plant capacity: 500 	 iteration: 10 	 rank: 2
15:06:06 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:06 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:06:06 INFO     found plant 
15:06:06 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:06 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:06:06 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:06:07 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:07 DEBUG    plant capacity: 500 	 iteration: 11 	 rank: 2
15:06:07 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:07 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:06:07 INFO     found plant 
15:06:07 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_500kw, cost_500kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:07 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:06:07 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:06:07 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:07 DEBUG    plant capacity: 500 	 iteration: 12 	 rank: 2
15:06:07 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:07 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 2
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:06:07 DEBUG    no more plants for the rank 2
15:06:07 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:06:07 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:06:08 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:08 DEBUG    plant capacity: 500 	 iteration: 13 	 rank: 1
15:06:08 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_500kw) AS methane_500kw,
            SUM (cost_500kw) AS cost_500kw
            FROM optimal_plant_residual_500kw
            WHERE  plant_capacity <=  500
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_500kw, a.cost_500kw, 500 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:08 INFO     
		SELECT id_target, rank, methane_500kw, cost_500kw, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_500kw > 963000.0 AND cost_500kw > 0 AND rank = 1
        
        ORDER BY cost_500kw ASC
        LIMIT 1
            ;
    
15:06:08 DEBUG    no more plants for the rank 1
15:06:08 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 500 AND methane_500kw < 963000.0
        ;
    
15:06:08 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 500
        )
        ;
    
15:06:08 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
            WHERE plant_capacity <= 500
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_500kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_500kw
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_500kw = b.methane_500kw,
            cost_500kw = b.cost_500kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:08 DEBUG    plant capacity: 500 	 iteration: 14 	 rank: 0
15:06:08 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_500kw;
CREATE TABLE optimal_plant_map_500kw AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_500kw AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
15:06:09 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:09 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:10 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:12 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:12 INFO     
    DROP TABLE IF EXISTS optimal_plant_residual_250kw;
CREATE TABLE optimal_plant_residual_250kw AS
    SELECT a.id_aggregate, a.id_target, a.id_building, b.rank, a.length, a.plant_capacity,
        a.manure, a.crop_production, a.live_methane, a.crop_methane,
        a.methane_250kw AS methane_250kw, a.cost_250kw AS cost_250kw
    FROM plants_costs_250kw AS a
    LEFT JOIN plants_costs_total AS b
    ON a.id_target = b.id_target
    WHERE a.plant_capacity <= 250
    ;
    
15:06:12 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_250kw;
CREATE TABLE optimal_plant_location_250kw AS
    		SELECT  id_target, rank, methane_250kw, cost_250kw, geom
            FROM plants_costs_total
            WHERE 0 > 1
            ;
    
15:06:12 INFO     ALTER TABLE optimal_plant_location_250kw ADD COLUMN  plant_capacity int;
15:06:12 INFO     UPDATE optimal_plant_location_250kw a SET plant_capacity = 250;
15:06:12 INFO     ALTER TABLE optimal_plant_location_250kw ADD COLUMN  id_order SERIAL PRIMARY KEY;
15:06:12 INFO     DROP TABLE IF EXISTS optimal_plant_links_250kw;
CREATE TABLE optimal_plant_links_250kw (id_aggregate int, id_target int, id_building int, plant_capacity int);
15:06:12 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:13 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:13 INFO     found plant 
15:06:13 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:13 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:13 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:13 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:14 DEBUG    plant capacity: 250 	 iteration: 1 	 rank: 3
15:06:14 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:14 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:14 INFO     found plant 
15:06:14 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:14 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:14 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:14 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:15 DEBUG    plant capacity: 250 	 iteration: 2 	 rank: 3
15:06:15 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:15 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:15 INFO     found plant 
15:06:15 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:15 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:15 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:15 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:16 DEBUG    plant capacity: 250 	 iteration: 3 	 rank: 3
15:06:16 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:16 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:16 INFO     found plant 
15:06:16 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:16 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:16 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:16 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:17 DEBUG    plant capacity: 250 	 iteration: 4 	 rank: 3
15:06:17 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:17 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:17 INFO     found plant 
15:06:17 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:17 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:17 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:17 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:18 DEBUG    plant capacity: 250 	 iteration: 5 	 rank: 3
15:06:18 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:18 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 3
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:18 DEBUG    no more plants for the rank 3
15:06:18 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:18 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:18 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:19 DEBUG    plant capacity: 250 	 iteration: 6 	 rank: 2
15:06:19 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:19 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:19 INFO     found plant 
15:06:19 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:19 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:19 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:19 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:19 DEBUG    plant capacity: 250 	 iteration: 7 	 rank: 2
15:06:19 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:19 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:19 INFO     found plant 
15:06:19 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:19 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:19 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:20 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:20 DEBUG    plant capacity: 250 	 iteration: 8 	 rank: 2
15:06:20 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:20 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:20 INFO     found plant 
15:06:20 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:20 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:20 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:20 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:21 DEBUG    plant capacity: 250 	 iteration: 9 	 rank: 2
15:06:21 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:21 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:21 INFO     found plant 
15:06:21 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:21 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:21 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:21 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:22 DEBUG    plant capacity: 250 	 iteration: 10 	 rank: 2
15:06:22 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:22 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:22 INFO     found plant 
15:06:22 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:22 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:22 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:22 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:23 DEBUG    plant capacity: 250 	 iteration: 11 	 rank: 2
15:06:23 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:23 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:23 INFO     found plant 
15:06:23 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:23 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:23 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:23 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:23 DEBUG    plant capacity: 250 	 iteration: 12 	 rank: 2
15:06:23 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:24 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:24 INFO     found plant 
15:06:24 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:24 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:24 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:24 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:24 DEBUG    plant capacity: 250 	 iteration: 13 	 rank: 2
15:06:24 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:24 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:24 INFO     found plant 
15:06:24 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:24 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:24 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:24 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:25 DEBUG    plant capacity: 250 	 iteration: 14 	 rank: 2
15:06:25 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:25 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:25 INFO     found plant 
15:06:25 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:25 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:25 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:25 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:25 DEBUG    plant capacity: 250 	 iteration: 15 	 rank: 2
15:06:25 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:25 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:25 INFO     found plant 
15:06:25 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:25 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:25 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:26 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:26 DEBUG    plant capacity: 250 	 iteration: 16 	 rank: 2
15:06:26 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:27 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:27 INFO     found plant 
15:06:27 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:27 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:27 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:27 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:27 DEBUG    plant capacity: 250 	 iteration: 17 	 rank: 2
15:06:27 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:27 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:27 INFO     found plant 
15:06:27 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:27 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:27 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:27 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:28 DEBUG    plant capacity: 250 	 iteration: 18 	 rank: 2
15:06:28 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:28 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 2
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:28 DEBUG    no more plants for the rank 2
15:06:28 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:28 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:28 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:28 DEBUG    plant capacity: 250 	 iteration: 19 	 rank: 1
15:06:28 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:28 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 1
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:28 INFO     found plant 
15:06:28 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_250kw, cost_250kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 1
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:28 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:28 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:28 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:28 DEBUG    plant capacity: 250 	 iteration: 20 	 rank: 1
15:06:28 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_250kw) AS methane_250kw,
            SUM (cost_250kw) AS cost_250kw
            FROM optimal_plant_residual_250kw
            WHERE  plant_capacity <=  250
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_250kw, a.cost_250kw, 250 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:28 INFO     
		SELECT id_target, rank, methane_250kw, cost_250kw, 250, geom
        FROM optimal_plant_residual_aggr_250kw
        WHERE methane_250kw > 504000.0 AND cost_250kw > 0 AND rank = 1
        
        ORDER BY cost_250kw ASC
        LIMIT 1
            ;
    
15:06:29 DEBUG    no more plants for the rank 1
15:06:29 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_250kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 250 AND methane_250kw < 504000.0
        ;
    
15:06:29 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 250
        )
        ;
    
15:06:29 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
            WHERE plant_capacity <= 250
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_250kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_250kw
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_250kw = b.methane_250kw,
            cost_250kw = b.cost_250kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:29 DEBUG    plant capacity: 250 	 iteration: 21 	 rank: 0
15:06:29 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_250kw;
CREATE TABLE optimal_plant_map_250kw AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_250kw AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
15:06:29 INFO     
            INSERT INTO optimal_plant_map_250kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_250kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:30 INFO     
            INSERT INTO optimal_plant_map_250kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_250kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:31 INFO     
            INSERT INTO optimal_plant_map_250kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_250kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:32 INFO     
            INSERT INTO optimal_plant_map_250kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_250kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:33 INFO     
    DROP TABLE IF EXISTS optimal_plant_residual_100kw;
CREATE TABLE optimal_plant_residual_100kw AS
    SELECT a.id_aggregate, a.id_target, a.id_building, b.rank, a.length, a.plant_capacity,
        a.manure, a.crop_production, a.live_methane, a.crop_methane,
        a.methane_100kw AS methane_100kw, a.cost_100kw AS cost_100kw
    FROM plants_costs_100kw AS a
    LEFT JOIN plants_costs_total AS b
    ON a.id_target = b.id_target
    WHERE a.plant_capacity <= 100
    ;
    
15:06:33 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_100kw;
CREATE TABLE optimal_plant_location_100kw AS
    		SELECT  id_target, rank, methane_100kw, cost_100kw, geom
            FROM plants_costs_total
            WHERE 0 > 1
            ;
    
15:06:33 INFO     ALTER TABLE optimal_plant_location_100kw ADD COLUMN  plant_capacity int;
15:06:33 INFO     UPDATE optimal_plant_location_100kw a SET plant_capacity = 100;
15:06:33 INFO     ALTER TABLE optimal_plant_location_100kw ADD COLUMN  id_order SERIAL PRIMARY KEY;
15:06:33 INFO     DROP TABLE IF EXISTS optimal_plant_links_100kw;
CREATE TABLE optimal_plant_links_100kw (id_aggregate int, id_target int, id_building int, plant_capacity int);
15:06:33 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:33 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:33 INFO     found plant 
15:06:33 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:33 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:33 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:33 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:34 DEBUG    plant capacity: 100 	 iteration: 1 	 rank: 3
15:06:34 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:34 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:34 INFO     found plant 
15:06:34 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:34 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:34 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:34 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:34 DEBUG    plant capacity: 100 	 iteration: 2 	 rank: 3
15:06:34 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:34 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:34 INFO     found plant 
15:06:34 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:34 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:34 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:34 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:34 DEBUG    plant capacity: 100 	 iteration: 3 	 rank: 3
15:06:34 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:35 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:35 INFO     found plant 
15:06:35 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:35 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:35 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:35 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:35 DEBUG    plant capacity: 100 	 iteration: 4 	 rank: 3
15:06:35 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:35 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:35 INFO     found plant 
15:06:35 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:35 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:35 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:35 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:35 DEBUG    plant capacity: 100 	 iteration: 5 	 rank: 3
15:06:35 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:36 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:36 INFO     found plant 
15:06:36 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:36 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:36 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:36 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:36 DEBUG    plant capacity: 100 	 iteration: 6 	 rank: 3
15:06:36 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:36 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:36 INFO     found plant 
15:06:36 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:36 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:36 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:36 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:37 DEBUG    plant capacity: 100 	 iteration: 7 	 rank: 3
15:06:37 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:37 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 3
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:37 DEBUG    no more plants for the rank 3
15:06:37 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:37 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:37 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:37 DEBUG    plant capacity: 100 	 iteration: 8 	 rank: 2
15:06:37 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:37 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:37 INFO     found plant 
15:06:37 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:37 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:37 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:37 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:38 DEBUG    plant capacity: 100 	 iteration: 9 	 rank: 2
15:06:38 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:38 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:38 INFO     found plant 
15:06:38 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:38 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:38 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:38 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:38 DEBUG    plant capacity: 100 	 iteration: 10 	 rank: 2
15:06:38 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:38 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:38 INFO     found plant 
15:06:38 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:38 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:38 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:38 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:38 DEBUG    plant capacity: 100 	 iteration: 11 	 rank: 2
15:06:38 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:39 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:39 INFO     found plant 
15:06:39 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:39 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:39 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:39 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:39 DEBUG    plant capacity: 100 	 iteration: 12 	 rank: 2
15:06:39 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:39 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:39 INFO     found plant 
15:06:39 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:39 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:39 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:39 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:39 DEBUG    plant capacity: 100 	 iteration: 13 	 rank: 2
15:06:39 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:39 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:39 INFO     found plant 
15:06:39 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:39 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:39 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:40 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:40 DEBUG    plant capacity: 100 	 iteration: 14 	 rank: 2
15:06:40 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:40 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:40 INFO     found plant 
15:06:40 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:40 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:40 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:40 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:40 DEBUG    plant capacity: 100 	 iteration: 15 	 rank: 2
15:06:40 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:40 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:40 INFO     found plant 
15:06:40 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:40 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:40 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:40 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:41 DEBUG    plant capacity: 100 	 iteration: 16 	 rank: 2
15:06:41 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:41 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:41 INFO     found plant 
15:06:41 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:41 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:41 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:41 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:41 DEBUG    plant capacity: 100 	 iteration: 17 	 rank: 2
15:06:41 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:41 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:41 INFO     found plant 
15:06:41 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:41 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:41 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:41 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:41 DEBUG    plant capacity: 100 	 iteration: 18 	 rank: 2
15:06:41 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:42 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:42 INFO     found plant 
15:06:42 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:42 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:42 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:42 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:42 DEBUG    plant capacity: 100 	 iteration: 19 	 rank: 2
15:06:42 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:42 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:42 INFO     found plant 
15:06:42 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:42 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:42 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:42 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:42 DEBUG    plant capacity: 100 	 iteration: 20 	 rank: 2
15:06:42 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:43 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:43 INFO     found plant 
15:06:43 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:43 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:43 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:43 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:43 DEBUG    plant capacity: 100 	 iteration: 21 	 rank: 2
15:06:43 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:43 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:43 INFO     found plant 
15:06:43 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:43 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:43 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:43 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:43 DEBUG    plant capacity: 100 	 iteration: 22 	 rank: 2
15:06:43 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:43 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:43 INFO     found plant 
15:06:43 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:43 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:43 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:44 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:44 DEBUG    plant capacity: 100 	 iteration: 23 	 rank: 2
15:06:44 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:44 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:44 INFO     found plant 
15:06:44 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:44 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:44 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:44 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:44 DEBUG    plant capacity: 100 	 iteration: 24 	 rank: 2
15:06:44 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:44 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:44 INFO     found plant 
15:06:44 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:44 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:44 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:44 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:44 DEBUG    plant capacity: 100 	 iteration: 25 	 rank: 2
15:06:44 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:45 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:45 INFO     found plant 
15:06:45 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:45 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:45 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:45 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:45 DEBUG    plant capacity: 100 	 iteration: 26 	 rank: 2
15:06:45 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:45 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:45 INFO     found plant 
15:06:45 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:45 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:45 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:45 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:45 DEBUG    plant capacity: 100 	 iteration: 27 	 rank: 2
15:06:45 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:45 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:45 INFO     found plant 
15:06:45 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:45 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:45 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:45 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:45 DEBUG    plant capacity: 100 	 iteration: 28 	 rank: 2
15:06:45 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:45 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:45 INFO     found plant 
15:06:45 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:45 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:45 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:46 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:46 DEBUG    plant capacity: 100 	 iteration: 29 	 rank: 2
15:06:46 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:46 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:46 INFO     found plant 
15:06:46 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:46 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:46 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:46 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:46 DEBUG    plant capacity: 100 	 iteration: 30 	 rank: 2
15:06:46 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:46 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:46 INFO     found plant 
15:06:46 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:46 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:46 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:46 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:46 DEBUG    plant capacity: 100 	 iteration: 31 	 rank: 2
15:06:46 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:46 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:46 INFO     found plant 
15:06:46 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:46 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:46 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:46 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:47 DEBUG    plant capacity: 100 	 iteration: 32 	 rank: 2
15:06:47 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:47 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:47 INFO     found plant 
15:06:47 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:47 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:47 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:47 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:47 DEBUG    plant capacity: 100 	 iteration: 33 	 rank: 2
15:06:47 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:47 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:47 INFO     found plant 
15:06:47 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:47 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:47 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:47 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:47 DEBUG    plant capacity: 100 	 iteration: 34 	 rank: 2
15:06:47 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:47 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:47 INFO     found plant 
15:06:47 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:47 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:47 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:47 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:48 DEBUG    plant capacity: 100 	 iteration: 35 	 rank: 2
15:06:48 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:48 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:48 INFO     found plant 
15:06:48 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:48 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:48 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:48 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:48 DEBUG    plant capacity: 100 	 iteration: 36 	 rank: 2
15:06:48 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:48 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:48 INFO     found plant 
15:06:48 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:48 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:48 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:48 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:48 DEBUG    plant capacity: 100 	 iteration: 37 	 rank: 2
15:06:48 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:48 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:48 INFO     found plant 
15:06:48 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:48 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:48 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:48 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:48 DEBUG    plant capacity: 100 	 iteration: 38 	 rank: 2
15:06:48 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:48 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:48 INFO     found plant 
15:06:48 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:48 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:48 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:48 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:48 DEBUG    plant capacity: 100 	 iteration: 39 	 rank: 2
15:06:48 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:49 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:49 INFO     found plant 
15:06:49 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:49 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:49 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:49 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:49 DEBUG    plant capacity: 100 	 iteration: 40 	 rank: 2
15:06:49 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:49 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:49 INFO     found plant 
15:06:49 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:49 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:49 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:49 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:49 DEBUG    plant capacity: 100 	 iteration: 41 	 rank: 2
15:06:49 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:49 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 2
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:49 DEBUG    no more plants for the rank 2
15:06:49 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:49 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:49 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:49 DEBUG    plant capacity: 100 	 iteration: 42 	 rank: 1
15:06:49 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:49 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:49 INFO     found plant 
15:06:49 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:49 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:49 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:49 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:49 DEBUG    plant capacity: 100 	 iteration: 43 	 rank: 1
15:06:49 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:49 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:49 INFO     found plant 
15:06:49 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:49 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:49 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:49 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:50 DEBUG    plant capacity: 100 	 iteration: 44 	 rank: 1
15:06:50 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:50 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:50 INFO     found plant 
15:06:50 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:50 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:50 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:50 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:50 DEBUG    plant capacity: 100 	 iteration: 45 	 rank: 1
15:06:50 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:50 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:50 INFO     found plant 
15:06:50 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:50 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:50 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:50 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:50 DEBUG    plant capacity: 100 	 iteration: 46 	 rank: 1
15:06:50 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:50 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:50 INFO     found plant 
15:06:50 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_100kw, cost_100kw, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
                ;
        
15:06:50 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:50 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:50 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:50 DEBUG    plant capacity: 100 	 iteration: 47 	 rank: 1
15:06:50 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_100kw) AS methane_100kw,
            SUM (cost_100kw) AS cost_100kw
            FROM optimal_plant_residual_100kw
            WHERE  plant_capacity <=  100
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, a.methane_100kw, a.cost_100kw, 100 AS plant_capacity, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC
            ;
    
15:06:50 INFO     
		SELECT id_target, rank, methane_100kw, cost_100kw, 100, geom
        FROM optimal_plant_residual_aggr_100kw
        WHERE methane_100kw > 201600.0 AND cost_100kw > 0 AND rank = 1
        
        ORDER BY cost_100kw ASC
        LIMIT 1
            ;
    
15:06:50 DEBUG    no more plants for the rank 1
15:06:50 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_100kw AS b
        WHERE a.id_target = b.id_target AND b.plant_capacity <= 100 AND methane_100kw < 201600.0
        ;
    
15:06:50 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
            AND a.plant_capacity <= 100
        )
        ;
    
15:06:50 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
            WHERE plant_capacity <= 100
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_100kw,
            COALESCE (live_methane, 0) + crop_methane AS methane_100kw
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_100kw = b.methane_100kw,
            cost_100kw = b.cost_100kw
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
15:06:50 DEBUG    plant capacity: 100 	 iteration: 48 	 rank: 0
15:06:50 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_100kw;
CREATE TABLE optimal_plant_map_100kw AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_100kw AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
15:06:51 INFO     
            INSERT INTO optimal_plant_map_100kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_100kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:51 INFO     
            INSERT INTO optimal_plant_map_100kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_100kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:52 INFO     
            INSERT INTO optimal_plant_map_100kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_100kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
15:06:54 INFO     
            INSERT INTO optimal_plant_map_100kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_100kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
