18:50:43 WARNING  is when this event was logged.
18:50:43 INFO     
    DROP TABLE IF EXISTS optimal_plant_residual_750kw;
CREATE TABLE optimal_plant_residual_750kw AS
    SELECT a.id_aggregate, a.id_target, a.id_building, a.length, b.rank, a.plant_capacity, a.manure, a.crop_production, a.live_methane, a.crop_methane, a.methane_total, a.cost_total
    FROM plants_costs AS a
    LEFT JOIN plants_costs_aggregated AS b
    ON a.id_target = b.id_target
    ;
    
18:50:44 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_750kw;
CREATE TABLE optimal_plant_location_750kw AS
    		SELECT  id_target, rank, methane_total, cost_total, geom
            FROM plants_costs_aggregated
            WHERE 0 > 1
            ;
    
18:50:44 INFO     ALTER TABLE optimal_plant_location_750kw ADD COLUMN  plant_capacity int;
18:50:44 INFO     UPDATE optimal_plant_location_750kw a SET plant_capacity = 750;
18:50:44 INFO     ALTER TABLE optimal_plant_location_750kw ADD COLUMN  id_order SERIAL PRIMARY KEY;
18:50:44 INFO     DROP TABLE IF EXISTS optimal_plant_links_750kw;
CREATE TABLE optimal_plant_links_750kw (id_aggregate int, id_target int, id_building int, plant_capacity int, length double precision, methane_total double precision, cost_total double precision);
18:50:44 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:50:44 INFO     SELECT * FROM optimal_plant_links_750kw
18:50:44 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 3
             AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:50:44 INFO     found plant 
18:50:44 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 3
             AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:50:44 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_750kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1560000
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_750kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:50:44 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_750kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:50:44 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:50:45 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:50:47 DEBUG    plant capacity: 750 	 iteration: 1 	 rank: 3
18:50:47 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:50:47 INFO     SELECT * FROM optimal_plant_links_750kw
18:50:47 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:50:47 INFO     found plant 
18:50:47 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:50:47 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_750kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1560000
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_750kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:50:48 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_750kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:50:48 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:50:48 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:50:50 DEBUG    plant capacity: 750 	 iteration: 2 	 rank: 3
18:50:50 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:50:50 INFO     SELECT * FROM optimal_plant_links_750kw
18:50:50 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:50:50 INFO     found plant 
18:50:50 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:50:50 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_750kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1560000
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_750kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:50:50 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_750kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:50:50 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:50:50 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:50:52 DEBUG    plant capacity: 750 	 iteration: 3 	 rank: 3
18:50:52 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:50:52 INFO     SELECT * FROM optimal_plant_links_750kw
18:50:52 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:50:52 INFO     found plant 
18:50:52 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:50:52 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_750kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1560000
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_750kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:50:52 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_750kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:50:52 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:50:52 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:50:54 DEBUG    plant capacity: 750 	 iteration: 4 	 rank: 3
18:50:54 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:50:55 INFO     SELECT * FROM optimal_plant_links_750kw
18:50:55 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:50:55 DEBUG    no more plants for the rank 3
18:50:55 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_750kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1560000
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_750kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:50:55 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_750kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:50:55 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:50:55 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:50:56 DEBUG    plant capacity: 750 	 iteration: 5 	 rank: 2
18:50:56 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:50:56 INFO     SELECT * FROM optimal_plant_links_750kw
18:50:56 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:50:56 INFO     found plant 
18:50:56 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:50:56 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_750kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1560000
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_750kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:50:56 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_750kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:50:56 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:50:56 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:50:57 DEBUG    plant capacity: 750 	 iteration: 6 	 rank: 2
18:50:57 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:50:57 INFO     SELECT * FROM optimal_plant_links_750kw
18:50:57 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:50:57 INFO     found plant 
18:50:57 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:50:57 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_750kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1560000
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_750kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:50:58 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_750kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:50:58 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:50:58 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:50:59 DEBUG    plant capacity: 750 	 iteration: 7 	 rank: 2
18:50:59 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:50:59 INFO     SELECT * FROM optimal_plant_links_750kw
18:50:59 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:50:59 DEBUG    no more plants for the rank 2
18:50:59 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_750kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1560000
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_750kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:50:59 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_750kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:50:59 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:50:59 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:00 DEBUG    plant capacity: 750 	 iteration: 8 	 rank: 1
18:51:00 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:00 INFO     SELECT * FROM optimal_plant_links_750kw
18:51:00 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 750 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_750kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_750kw) AS b
            WHERE a.methane_total_aggr >= 1560000 AND a.cost_total_aggr > 0  AND a.rank = 1
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:00 DEBUG    no more plants for the rank 1
18:51:00 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_750kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1560000
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_750kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:00 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_750kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:00 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:00 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:01 DEBUG    plant capacity: 750 	 iteration: 9 	 rank: 0
18:51:01 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_750kw;
CREATE TABLE optimal_plant_map_750kw AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_750kw AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
18:51:02 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:51:03 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:51:03 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:51:05 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:51:05 INFO     
    DROP TABLE IF EXISTS optimal_plant_residual_500kw;
CREATE TABLE optimal_plant_residual_500kw AS
    SELECT a.id_aggregate, a.id_target, a.id_building, a.length, b.rank, a.plant_capacity, a.manure, a.crop_production, a.live_methane, a.crop_methane, a.methane_total, a.cost_total
    FROM plants_costs AS a
    LEFT JOIN plants_costs_aggregated AS b
    ON a.id_target = b.id_target
    ;
    
18:51:06 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_500kw;
CREATE TABLE optimal_plant_location_500kw AS
    		SELECT  id_target, rank, methane_total, cost_total, geom
            FROM plants_costs_aggregated
            WHERE 0 > 1
            ;
    
18:51:06 INFO     ALTER TABLE optimal_plant_location_500kw ADD COLUMN  plant_capacity int;
18:51:06 INFO     UPDATE optimal_plant_location_500kw a SET plant_capacity = 500;
18:51:06 INFO     ALTER TABLE optimal_plant_location_500kw ADD COLUMN  id_order SERIAL PRIMARY KEY;
18:51:06 INFO     DROP TABLE IF EXISTS optimal_plant_links_500kw;
CREATE TABLE optimal_plant_links_500kw (id_aggregate int, id_target int, id_building int, plant_capacity int, length double precision, methane_total double precision, cost_total double precision);
18:51:06 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:06 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:06 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
             AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:06 INFO     found plant 
18:51:06 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
             AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:06 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:06 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:06 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:07 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:10 DEBUG    plant capacity: 500 	 iteration: 1 	 rank: 3
18:51:10 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:10 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:10 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:10 INFO     found plant 
18:51:10 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:10 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:10 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:10 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:10 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:12 DEBUG    plant capacity: 500 	 iteration: 2 	 rank: 3
18:51:12 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:12 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:12 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:12 INFO     found plant 
18:51:12 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:12 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:13 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:13 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:13 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:16 DEBUG    plant capacity: 500 	 iteration: 3 	 rank: 3
18:51:16 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:16 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:16 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:16 INFO     found plant 
18:51:16 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:16 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:16 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:16 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:16 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:18 DEBUG    plant capacity: 500 	 iteration: 4 	 rank: 3
18:51:18 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:18 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:18 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:18 DEBUG    no more plants for the rank 3
18:51:18 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:18 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:18 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:18 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:20 DEBUG    plant capacity: 500 	 iteration: 5 	 rank: 2
18:51:20 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:20 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:20 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:20 INFO     found plant 
18:51:20 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:20 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:20 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:20 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:20 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:21 DEBUG    plant capacity: 500 	 iteration: 6 	 rank: 2
18:51:21 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:21 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:21 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:21 INFO     found plant 
18:51:21 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:21 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:21 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:21 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:22 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:23 DEBUG    plant capacity: 500 	 iteration: 7 	 rank: 2
18:51:23 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:23 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:23 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:23 INFO     found plant 
18:51:23 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:23 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:23 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:23 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:23 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:24 DEBUG    plant capacity: 500 	 iteration: 8 	 rank: 2
18:51:24 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:24 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:24 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:24 INFO     found plant 
18:51:24 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:24 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:25 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:25 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:25 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:26 DEBUG    plant capacity: 500 	 iteration: 9 	 rank: 2
18:51:26 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:26 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:26 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:26 INFO     found plant 
18:51:26 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:26 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:26 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:26 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:26 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:26 DEBUG    plant capacity: 500 	 iteration: 10 	 rank: 2
18:51:26 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:26 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:26 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:26 INFO     found plant 
18:51:26 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:26 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:27 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:27 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:27 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:27 DEBUG    plant capacity: 500 	 iteration: 11 	 rank: 2
18:51:27 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:27 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:27 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:27 DEBUG    no more plants for the rank 2
18:51:27 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:27 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:27 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:27 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:28 DEBUG    plant capacity: 500 	 iteration: 12 	 rank: 1
18:51:28 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:28 INFO     SELECT * FROM optimal_plant_links_500kw
18:51:28 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 500 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_500kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_500kw) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 1
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:28 DEBUG    no more plants for the rank 1
18:51:28 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_500kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 1070000
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_500kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:28 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_500kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:28 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:28 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:28 DEBUG    plant capacity: 500 	 iteration: 13 	 rank: 0
18:51:28 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_500kw;
CREATE TABLE optimal_plant_map_500kw AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_500kw AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
18:51:29 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:51:30 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:51:30 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:51:32 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:51:32 INFO     
    DROP TABLE IF EXISTS optimal_plant_residual_250kw;
CREATE TABLE optimal_plant_residual_250kw AS
    SELECT a.id_aggregate, a.id_target, a.id_building, a.length, b.rank, a.plant_capacity, a.manure, a.crop_production, a.live_methane, a.crop_methane, a.methane_total, a.cost_total
    FROM plants_costs AS a
    LEFT JOIN plants_costs_aggregated AS b
    ON a.id_target = b.id_target
    ;
    
18:51:33 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_250kw;
CREATE TABLE optimal_plant_location_250kw AS
    		SELECT  id_target, rank, methane_total, cost_total, geom
            FROM plants_costs_aggregated
            WHERE 0 > 1
            ;
    
18:51:33 INFO     ALTER TABLE optimal_plant_location_250kw ADD COLUMN  plant_capacity int;
18:51:33 INFO     UPDATE optimal_plant_location_250kw a SET plant_capacity = 250;
18:51:33 INFO     ALTER TABLE optimal_plant_location_250kw ADD COLUMN  id_order SERIAL PRIMARY KEY;
18:51:33 INFO     DROP TABLE IF EXISTS optimal_plant_links_250kw;
CREATE TABLE optimal_plant_links_250kw (id_aggregate int, id_target int, id_building int, plant_capacity int, length double precision, methane_total double precision, cost_total double precision);
18:51:33 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:33 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:33 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
             AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:33 INFO     found plant 
18:51:33 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
             AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:33 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:33 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:33 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:34 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:37 DEBUG    plant capacity: 250 	 iteration: 1 	 rank: 3
18:51:37 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:37 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:37 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:37 INFO     found plant 
18:51:37 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:37 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:37 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:37 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:37 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:40 DEBUG    plant capacity: 250 	 iteration: 2 	 rank: 3
18:51:40 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:40 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:40 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:40 INFO     found plant 
18:51:40 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:40 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:40 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:40 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:41 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:43 DEBUG    plant capacity: 250 	 iteration: 3 	 rank: 3
18:51:43 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:43 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:43 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:43 INFO     found plant 
18:51:43 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:43 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:43 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:43 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:43 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:46 DEBUG    plant capacity: 250 	 iteration: 4 	 rank: 3
18:51:46 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:46 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:46 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:46 INFO     found plant 
18:51:46 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:46 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:46 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:46 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:46 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:48 DEBUG    plant capacity: 250 	 iteration: 5 	 rank: 3
18:51:48 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:48 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:48 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:48 INFO     found plant 
18:51:48 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:48 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:48 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:48 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:49 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:51 DEBUG    plant capacity: 250 	 iteration: 6 	 rank: 3
18:51:51 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:51 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:51 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:51 INFO     found plant 
18:51:51 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:51 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:51 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:51 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:51 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:53 DEBUG    plant capacity: 250 	 iteration: 7 	 rank: 3
18:51:53 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:53 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:53 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:53 INFO     found plant 
18:51:53 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:53 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:53 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:53 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:54 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:55 DEBUG    plant capacity: 250 	 iteration: 8 	 rank: 3
18:51:55 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:55 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:55 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:55 INFO     found plant 
18:51:55 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:55 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:56 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:56 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:56 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:57 DEBUG    plant capacity: 250 	 iteration: 9 	 rank: 3
18:51:57 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:57 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:57 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:57 INFO     found plant 
18:51:57 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:51:57 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:58 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:58 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:58 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:51:59 DEBUG    plant capacity: 250 	 iteration: 10 	 rank: 3
18:51:59 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:51:59 INFO     SELECT * FROM optimal_plant_links_250kw
18:51:59 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:51:59 DEBUG    no more plants for the rank 3
18:51:59 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:51:59 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:51:59 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:51:59 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:01 DEBUG    plant capacity: 250 	 iteration: 11 	 rank: 2
18:52:01 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:01 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:01 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:01 INFO     found plant 
18:52:01 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:01 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:01 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:01 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:01 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:02 DEBUG    plant capacity: 250 	 iteration: 12 	 rank: 2
18:52:02 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:03 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:03 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:03 INFO     found plant 
18:52:03 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:03 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:03 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:03 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:03 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:04 DEBUG    plant capacity: 250 	 iteration: 13 	 rank: 2
18:52:04 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:04 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:04 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:04 INFO     found plant 
18:52:04 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:04 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:04 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:04 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:04 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:05 DEBUG    plant capacity: 250 	 iteration: 14 	 rank: 2
18:52:05 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:05 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:05 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:05 INFO     found plant 
18:52:05 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:05 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:05 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:05 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:05 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:06 DEBUG    plant capacity: 250 	 iteration: 15 	 rank: 2
18:52:06 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:07 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:07 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:07 INFO     found plant 
18:52:07 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:07 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:07 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:07 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:07 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:08 DEBUG    plant capacity: 250 	 iteration: 16 	 rank: 2
18:52:08 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:08 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:08 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:08 INFO     found plant 
18:52:08 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:08 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:08 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:08 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:08 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:09 DEBUG    plant capacity: 250 	 iteration: 17 	 rank: 2
18:52:09 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:09 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:09 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:09 INFO     found plant 
18:52:09 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:09 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:09 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:09 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:09 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:09 DEBUG    plant capacity: 250 	 iteration: 18 	 rank: 2
18:52:09 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:09 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:09 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:09 INFO     found plant 
18:52:09 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:09 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:10 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:10 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:10 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:10 DEBUG    plant capacity: 250 	 iteration: 19 	 rank: 2
18:52:10 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:10 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:10 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:10 INFO     found plant 
18:52:10 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:10 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:10 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:10 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:10 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:11 DEBUG    plant capacity: 250 	 iteration: 20 	 rank: 2
18:52:11 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:11 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:11 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:11 INFO     found plant 
18:52:11 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:11 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:11 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:11 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:11 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:12 DEBUG    plant capacity: 250 	 iteration: 21 	 rank: 2
18:52:12 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:12 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:12 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:12 INFO     found plant 
18:52:12 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:12 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:12 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:12 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:12 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:12 DEBUG    plant capacity: 250 	 iteration: 22 	 rank: 2
18:52:12 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:12 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:12 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:12 INFO     found plant 
18:52:12 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:12 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:12 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:12 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:12 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:12 DEBUG    plant capacity: 250 	 iteration: 23 	 rank: 2
18:52:12 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:13 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:13 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:13 INFO     found plant 
18:52:13 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:13 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:13 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:13 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:13 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:13 DEBUG    plant capacity: 250 	 iteration: 24 	 rank: 2
18:52:13 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:13 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:13 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:13 DEBUG    no more plants for the rank 2
18:52:13 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:13 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:13 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:13 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:13 DEBUG    plant capacity: 250 	 iteration: 25 	 rank: 1
18:52:13 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:13 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:13 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 1
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:13 INFO     found plant 
18:52:13 INFO     
    		INSERT INTO optimal_plant_location_250kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 1
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:13 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:13 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:13 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:13 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:13 DEBUG    plant capacity: 250 	 iteration: 26 	 rank: 1
18:52:13 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_250kw;
CREATE TABLE optimal_plant_residual_aggr_250kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_250kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 250 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:13 INFO     SELECT * FROM optimal_plant_links_250kw
18:52:13 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 250 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_250kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_250kw) AS b
            WHERE a.methane_total_aggr >= 560000 AND a.cost_total_aggr > 0  AND a.rank = 1
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:13 DEBUG    no more plants for the rank 1
18:52:13 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_250kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_250kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 560000
        )
        INSERT INTO optimal_plant_links_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_250kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:13 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_250kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:13 INFO     
        DELETE FROM optimal_plant_residual_250kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_250kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:14 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_250kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_250kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:14 DEBUG    plant capacity: 250 	 iteration: 27 	 rank: 0
18:52:14 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_250kw;
CREATE TABLE optimal_plant_map_250kw AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_250kw AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
18:52:14 INFO     
            INSERT INTO optimal_plant_map_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_250kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:52:15 INFO     
            INSERT INTO optimal_plant_map_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_250kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:52:15 INFO     
            INSERT INTO optimal_plant_map_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_250kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:52:17 INFO     
            INSERT INTO optimal_plant_map_250kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_250kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:52:18 INFO     
    DROP TABLE IF EXISTS optimal_plant_residual_100kw;
CREATE TABLE optimal_plant_residual_100kw AS
    SELECT a.id_aggregate, a.id_target, a.id_building, a.length, b.rank, a.plant_capacity, a.manure, a.crop_production, a.live_methane, a.crop_methane, a.methane_total, a.cost_total
    FROM plants_costs AS a
    LEFT JOIN plants_costs_aggregated AS b
    ON a.id_target = b.id_target
    ;
    
18:52:18 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_100kw;
CREATE TABLE optimal_plant_location_100kw AS
    		SELECT  id_target, rank, methane_total, cost_total, geom
            FROM plants_costs_aggregated
            WHERE 0 > 1
            ;
    
18:52:18 INFO     ALTER TABLE optimal_plant_location_100kw ADD COLUMN  plant_capacity int;
18:52:18 INFO     UPDATE optimal_plant_location_100kw a SET plant_capacity = 100;
18:52:18 INFO     ALTER TABLE optimal_plant_location_100kw ADD COLUMN  id_order SERIAL PRIMARY KEY;
18:52:18 INFO     DROP TABLE IF EXISTS optimal_plant_links_100kw;
CREATE TABLE optimal_plant_links_100kw (id_aggregate int, id_target int, id_building int, plant_capacity int, length double precision, methane_total double precision, cost_total double precision);
18:52:18 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:19 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:19 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
             AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:19 INFO     found plant 
18:52:19 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
             AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:19 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:19 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:19 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:19 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:22 DEBUG    plant capacity: 100 	 iteration: 1 	 rank: 3
18:52:22 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:22 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:22 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:22 INFO     found plant 
18:52:22 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:22 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:22 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:22 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:23 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:25 DEBUG    plant capacity: 100 	 iteration: 2 	 rank: 3
18:52:25 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:25 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:25 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:25 INFO     found plant 
18:52:25 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:25 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:25 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:25 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:26 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:28 DEBUG    plant capacity: 100 	 iteration: 3 	 rank: 3
18:52:28 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:28 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:28 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:28 INFO     found plant 
18:52:28 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:28 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:28 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:28 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:28 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:30 DEBUG    plant capacity: 100 	 iteration: 4 	 rank: 3
18:52:30 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:31 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:31 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:31 INFO     found plant 
18:52:31 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:31 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:31 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:31 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:31 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:33 DEBUG    plant capacity: 100 	 iteration: 5 	 rank: 3
18:52:33 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:33 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:33 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:33 INFO     found plant 
18:52:33 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:33 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:34 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:34 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:34 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:36 DEBUG    plant capacity: 100 	 iteration: 6 	 rank: 3
18:52:36 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:36 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:36 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:36 INFO     found plant 
18:52:36 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:36 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:36 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:36 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:37 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:40 DEBUG    plant capacity: 100 	 iteration: 7 	 rank: 3
18:52:40 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:40 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:40 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:40 INFO     found plant 
18:52:40 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:40 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:40 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:40 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:40 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:43 DEBUG    plant capacity: 100 	 iteration: 8 	 rank: 3
18:52:43 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:44 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:44 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:44 INFO     found plant 
18:52:44 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:44 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:44 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:44 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:45 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:47 DEBUG    plant capacity: 100 	 iteration: 9 	 rank: 3
18:52:47 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:48 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:48 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:48 INFO     found plant 
18:52:48 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:48 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:48 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:48 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:48 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:50 DEBUG    plant capacity: 100 	 iteration: 10 	 rank: 3
18:52:50 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:51 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:51 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:51 INFO     found plant 
18:52:51 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:51 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:51 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:51 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:51 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:53 DEBUG    plant capacity: 100 	 iteration: 11 	 rank: 3
18:52:53 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:53 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:53 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:53 INFO     found plant 
18:52:53 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:53 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:54 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:54 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:54 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:56 DEBUG    plant capacity: 100 	 iteration: 12 	 rank: 3
18:52:56 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:56 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:56 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:56 INFO     found plant 
18:52:56 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:56 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:56 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:56 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:52:57 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:52:59 DEBUG    plant capacity: 100 	 iteration: 13 	 rank: 3
18:52:59 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:52:59 INFO     SELECT * FROM optimal_plant_links_100kw
18:52:59 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:52:59 INFO     found plant 
18:52:59 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:52:59 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:52:59 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:52:59 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:00 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:02 DEBUG    plant capacity: 100 	 iteration: 14 	 rank: 3
18:53:02 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:02 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:02 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:02 INFO     found plant 
18:53:02 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:02 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:03 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:03 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:03 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:05 DEBUG    plant capacity: 100 	 iteration: 15 	 rank: 3
18:53:05 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:05 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:05 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:05 INFO     found plant 
18:53:05 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:05 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:05 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:05 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:06 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:08 DEBUG    plant capacity: 100 	 iteration: 16 	 rank: 3
18:53:08 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:08 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:08 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:08 INFO     found plant 
18:53:08 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:08 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:08 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:08 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:09 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:10 DEBUG    plant capacity: 100 	 iteration: 17 	 rank: 3
18:53:10 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:11 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:11 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:11 INFO     found plant 
18:53:11 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:11 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:11 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:11 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:11 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:13 DEBUG    plant capacity: 100 	 iteration: 18 	 rank: 3
18:53:13 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:13 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:13 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:13 INFO     found plant 
18:53:13 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:13 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:14 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:14 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:14 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:16 DEBUG    plant capacity: 100 	 iteration: 19 	 rank: 3
18:53:16 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:16 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:16 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:16 INFO     found plant 
18:53:16 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:16 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:16 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:16 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:16 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:18 DEBUG    plant capacity: 100 	 iteration: 20 	 rank: 3
18:53:18 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:18 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:18 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:18 INFO     found plant 
18:53:18 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:18 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:19 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:19 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:19 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:21 DEBUG    plant capacity: 100 	 iteration: 21 	 rank: 3
18:53:21 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:21 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:21 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:21 INFO     found plant 
18:53:21 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:21 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:21 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:21 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:21 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:23 DEBUG    plant capacity: 100 	 iteration: 22 	 rank: 3
18:53:23 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:23 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:23 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:23 DEBUG    no more plants for the rank 3
18:53:23 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:24 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:24 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:24 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:25 DEBUG    plant capacity: 100 	 iteration: 23 	 rank: 2
18:53:25 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:25 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:25 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:25 INFO     found plant 
18:53:25 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:25 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:26 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:26 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:26 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:27 DEBUG    plant capacity: 100 	 iteration: 24 	 rank: 2
18:53:27 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:27 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:27 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:27 INFO     found plant 
18:53:27 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:27 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:28 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:28 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:28 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:29 DEBUG    plant capacity: 100 	 iteration: 25 	 rank: 2
18:53:29 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:30 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:30 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:30 INFO     found plant 
18:53:30 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:30 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:30 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:30 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:30 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:31 DEBUG    plant capacity: 100 	 iteration: 26 	 rank: 2
18:53:31 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:32 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:32 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:32 INFO     found plant 
18:53:32 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:32 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:32 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:32 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:32 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:34 DEBUG    plant capacity: 100 	 iteration: 27 	 rank: 2
18:53:34 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:34 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:34 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:34 INFO     found plant 
18:53:34 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:34 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:34 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:34 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:35 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:36 DEBUG    plant capacity: 100 	 iteration: 28 	 rank: 2
18:53:36 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:36 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:36 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:36 INFO     found plant 
18:53:36 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:36 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:36 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:36 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:37 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:38 DEBUG    plant capacity: 100 	 iteration: 29 	 rank: 2
18:53:38 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:38 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:38 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:38 INFO     found plant 
18:53:38 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:38 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:39 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:39 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:39 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:40 DEBUG    plant capacity: 100 	 iteration: 30 	 rank: 2
18:53:40 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:40 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:41 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:41 INFO     found plant 
18:53:41 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:41 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:41 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:41 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:41 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:42 DEBUG    plant capacity: 100 	 iteration: 31 	 rank: 2
18:53:42 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:43 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:43 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:43 INFO     found plant 
18:53:43 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:43 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:43 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:43 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:43 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:44 DEBUG    plant capacity: 100 	 iteration: 32 	 rank: 2
18:53:44 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:45 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:45 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:45 INFO     found plant 
18:53:45 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:45 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:45 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:45 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:45 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:46 DEBUG    plant capacity: 100 	 iteration: 33 	 rank: 2
18:53:46 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:47 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:47 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:47 INFO     found plant 
18:53:47 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:47 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:47 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:47 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:47 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:48 DEBUG    plant capacity: 100 	 iteration: 34 	 rank: 2
18:53:48 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:48 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:48 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:48 INFO     found plant 
18:53:48 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:48 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:49 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:49 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:49 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:50 DEBUG    plant capacity: 100 	 iteration: 35 	 rank: 2
18:53:50 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:50 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:50 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:50 INFO     found plant 
18:53:50 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:50 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:50 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:50 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:51 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:52 DEBUG    plant capacity: 100 	 iteration: 36 	 rank: 2
18:53:52 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:52 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:52 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:52 INFO     found plant 
18:53:52 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:52 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:52 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:52 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:52 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:53 DEBUG    plant capacity: 100 	 iteration: 37 	 rank: 2
18:53:53 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:54 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:54 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:54 INFO     found plant 
18:53:54 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:54 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:54 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:54 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:54 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:55 DEBUG    plant capacity: 100 	 iteration: 38 	 rank: 2
18:53:55 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:56 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:56 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:56 INFO     found plant 
18:53:56 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:56 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:56 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:56 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:56 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:57 DEBUG    plant capacity: 100 	 iteration: 39 	 rank: 2
18:53:57 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:57 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:57 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:57 INFO     found plant 
18:53:57 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:57 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:57 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:57 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:58 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:53:59 DEBUG    plant capacity: 100 	 iteration: 40 	 rank: 2
18:53:59 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:53:59 INFO     SELECT * FROM optimal_plant_links_100kw
18:53:59 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:53:59 INFO     found plant 
18:53:59 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:53:59 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:53:59 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:53:59 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:53:59 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:00 DEBUG    plant capacity: 100 	 iteration: 41 	 rank: 2
18:54:00 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:00 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:00 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:00 INFO     found plant 
18:54:00 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:00 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:01 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:01 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:01 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:02 DEBUG    plant capacity: 100 	 iteration: 42 	 rank: 2
18:54:02 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:02 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:02 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:02 INFO     found plant 
18:54:02 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:02 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:02 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:02 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:02 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:03 DEBUG    plant capacity: 100 	 iteration: 43 	 rank: 2
18:54:03 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:03 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:03 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:03 INFO     found plant 
18:54:03 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:03 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:03 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:03 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:04 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:04 DEBUG    plant capacity: 100 	 iteration: 44 	 rank: 2
18:54:04 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:05 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:05 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:05 INFO     found plant 
18:54:05 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:05 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:05 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:05 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:05 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:06 DEBUG    plant capacity: 100 	 iteration: 45 	 rank: 2
18:54:06 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:06 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:06 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:06 INFO     found plant 
18:54:06 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:06 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:06 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:06 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:06 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:07 DEBUG    plant capacity: 100 	 iteration: 46 	 rank: 2
18:54:07 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:07 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:07 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:07 INFO     found plant 
18:54:07 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:07 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:07 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:07 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:07 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:08 DEBUG    plant capacity: 100 	 iteration: 47 	 rank: 2
18:54:08 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:08 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:08 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:08 INFO     found plant 
18:54:08 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:08 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:08 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:08 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:08 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:09 DEBUG    plant capacity: 100 	 iteration: 48 	 rank: 2
18:54:09 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:09 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:09 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:09 INFO     found plant 
18:54:09 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:09 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:09 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:09 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:10 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:10 DEBUG    plant capacity: 100 	 iteration: 49 	 rank: 2
18:54:10 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:10 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:10 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:10 INFO     found plant 
18:54:10 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:10 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:10 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:10 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:11 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:11 DEBUG    plant capacity: 100 	 iteration: 50 	 rank: 2
18:54:11 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:11 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:11 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:11 INFO     found plant 
18:54:11 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:11 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:11 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:11 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:12 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:12 DEBUG    plant capacity: 100 	 iteration: 51 	 rank: 2
18:54:12 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:12 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:12 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:12 INFO     found plant 
18:54:12 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:12 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:12 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:12 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:13 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:13 DEBUG    plant capacity: 100 	 iteration: 52 	 rank: 2
18:54:13 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:13 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:13 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:13 INFO     found plant 
18:54:13 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:13 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:13 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:13 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:14 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:14 DEBUG    plant capacity: 100 	 iteration: 53 	 rank: 2
18:54:14 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:14 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:14 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:14 INFO     found plant 
18:54:14 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:14 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:14 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:14 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:15 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:15 DEBUG    plant capacity: 100 	 iteration: 54 	 rank: 2
18:54:15 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:15 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:15 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:15 INFO     found plant 
18:54:15 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:15 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:15 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:15 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:16 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:16 DEBUG    plant capacity: 100 	 iteration: 55 	 rank: 2
18:54:16 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:16 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:16 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:16 INFO     found plant 
18:54:16 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:16 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:16 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:16 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:17 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:17 DEBUG    plant capacity: 100 	 iteration: 56 	 rank: 2
18:54:17 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:17 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:17 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:17 INFO     found plant 
18:54:17 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:17 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:17 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:17 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:17 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:18 DEBUG    plant capacity: 100 	 iteration: 57 	 rank: 2
18:54:18 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:18 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:18 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:18 INFO     found plant 
18:54:18 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:18 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:18 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:18 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:18 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:18 DEBUG    plant capacity: 100 	 iteration: 58 	 rank: 2
18:54:18 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:18 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:18 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:18 INFO     found plant 
18:54:18 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:18 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:18 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:18 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:19 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:19 DEBUG    plant capacity: 100 	 iteration: 59 	 rank: 2
18:54:19 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:19 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:19 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:19 INFO     found plant 
18:54:19 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:19 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:19 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:19 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:19 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:20 DEBUG    plant capacity: 100 	 iteration: 60 	 rank: 2
18:54:20 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:20 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:20 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:20 INFO     found plant 
18:54:20 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:20 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:20 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:20 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:20 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:20 DEBUG    plant capacity: 100 	 iteration: 61 	 rank: 2
18:54:20 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:20 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:20 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:20 INFO     found plant 
18:54:20 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:20 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:21 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:21 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:21 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:21 DEBUG    plant capacity: 100 	 iteration: 62 	 rank: 2
18:54:21 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:21 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:21 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:21 INFO     found plant 
18:54:21 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:21 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:21 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:21 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:21 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:21 DEBUG    plant capacity: 100 	 iteration: 63 	 rank: 2
18:54:21 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:22 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:22 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:22 INFO     found plant 
18:54:22 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:22 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:22 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:22 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:22 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:22 DEBUG    plant capacity: 100 	 iteration: 64 	 rank: 2
18:54:22 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:22 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:22 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:22 INFO     found plant 
18:54:22 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:22 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:22 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:22 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:23 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:23 DEBUG    plant capacity: 100 	 iteration: 65 	 rank: 2
18:54:23 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:23 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:23 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:23 INFO     found plant 
18:54:23 INFO     
    		INSERT INTO optimal_plant_location_100kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
18:54:23 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:23 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:23 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:23 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:23 DEBUG    plant capacity: 100 	 iteration: 66 	 rank: 2
18:54:23 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:23 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:23 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:23 DEBUG    no more plants for the rank 2
18:54:23 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:23 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:24 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:24 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:24 DEBUG    plant capacity: 100 	 iteration: 67 	 rank: 1
18:54:24 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_100kw;
CREATE TABLE optimal_plant_residual_aggr_100kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_100kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
18:54:24 INFO     SELECT * FROM optimal_plant_links_100kw
18:54:24 INFO     
    		SELECT a.id_target, a.rank, a.methane_total_aggr, a.cost_total_aggr, 100 AS plant_capacity, a.geom
            FROM optimal_plant_residual_aggr_100kw AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_100kw) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 1
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
18:54:24 DEBUG    no more plants for the rank 1
18:54:24 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_100kw
            ORDER BY id_order DESC
            LIMIT 1
        ),
        selection AS (
            SELECT *
            FROM (
                SELECT id_building, a.id_target, a.methane_total, a.cost_total,
                SUM (a.methane_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS methane_aggregated,
                SUM (a.cost_total) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS cost_aggregated
                FROM optimal_plant_residual_100kw AS a, last_record AS b
                WHERE a.id_target = b.id_target
                ) AS f
            WHERE methane_aggregated <= 224000
        )
        INSERT INTO optimal_plant_links_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total)
        SELECT d.id_aggregate, c.id_target, c.id_building, d.plant_capacity, d.length, c.methane_total, c.cost_total
        FROM selection AS c
        LEFT JOIN optimal_plant_residual_100kw AS d
        ON c.id_building = d.id_building AND c.id_target = d.id_target
        ;
    
18:54:24 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_100kw
            GROUP BY id_target
            ORDER BY id_target
        )

        UPDATE optimal_plant_location_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
18:54:24 INFO     
        DELETE FROM optimal_plant_residual_100kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_100kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
18:54:24 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_100kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_100kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
18:54:24 DEBUG    plant capacity: 100 	 iteration: 68 	 rank: 0
18:54:24 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_100kw;
CREATE TABLE optimal_plant_map_100kw AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_100kw AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
18:54:25 INFO     
            INSERT INTO optimal_plant_map_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_100kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:54:25 INFO     
            INSERT INTO optimal_plant_map_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_100kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:54:26 INFO     
            INSERT INTO optimal_plant_map_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_100kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
18:54:28 INFO     
            INSERT INTO optimal_plant_map_100kw (id_aggregate, id_target, id_building, plant_capacity, length, methane_total, cost_total, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_100kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
