14:42:00 WARNING  is when this event was logged.
14:42:00 INFO     
    DROP TABLE IF EXISTS optimal_plant_residual_750kw;
CREATE TABLE optimal_plant_residual_750kw AS
    SELECT a.id_aggregate, a.id_target, a.id_building, a.length, b.rank, a.plant_capacity, a.manure, a.crop_production, a.live_methane, a.crop_methane, a.methane_total, a.cost_total
    FROM plants_costs AS a
    LEFT JOIN plants_costs_aggregated AS b
    ON a.id_target = b.id_target
    ;
    
14:42:01 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_750kw;
CREATE TABLE optimal_plant_location_750kw AS
    		SELECT  id_target, rank, methane_total, cost_total, geom
            FROM plants_costs_aggregated
            WHERE 0 > 1
            ;
    
14:42:01 INFO     ALTER TABLE optimal_plant_location_750kw ADD COLUMN  plant_capacity int;
14:42:01 INFO     UPDATE optimal_plant_location_750kw a SET plant_capacity = 750;
14:42:01 INFO     ALTER TABLE optimal_plant_location_750kw ADD COLUMN  id_order SERIAL PRIMARY KEY;
14:42:01 INFO     DROP TABLE IF EXISTS optimal_plant_links_750kw;
CREATE TABLE optimal_plant_links_750kw (id_aggregate int, id_target int, id_building int, plant_capacity int);
14:42:01 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:02 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:02 INFO     found plant 
14:42:02 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:02 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1482000.0
        ;
    
14:42:02 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:02 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:05 DEBUG    plant capacity: 750 	 iteration: 1 	 rank: 3
14:42:05 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:05 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:05 INFO     found plant 
14:42:05 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:05 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1482000.0
        ;
    
14:42:05 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:05 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:07 DEBUG    plant capacity: 750 	 iteration: 2 	 rank: 3
14:42:07 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:07 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:07 INFO     found plant 
14:42:07 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:07 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1482000.0
        ;
    
14:42:07 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:08 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:09 DEBUG    plant capacity: 750 	 iteration: 3 	 rank: 3
14:42:09 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:09 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:09 INFO     found plant 
14:42:09 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:09 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1482000.0
        ;
    
14:42:09 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:09 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:11 DEBUG    plant capacity: 750 	 iteration: 4 	 rank: 3
14:42:11 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:11 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:11 DEBUG    no more plants for the rank 3
14:42:11 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1482000.0
        ;
    
14:42:11 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:11 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:12 DEBUG    plant capacity: 750 	 iteration: 5 	 rank: 2
14:42:12 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:12 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:12 INFO     found plant 
14:42:12 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:12 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1482000.0
        ;
    
14:42:12 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:12 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:13 DEBUG    plant capacity: 750 	 iteration: 6 	 rank: 2
14:42:13 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:13 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:13 INFO     found plant 
14:42:13 INFO     
    		INSERT INTO optimal_plant_location_750kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:13 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1482000.0
        ;
    
14:42:13 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:14 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:14 DEBUG    plant capacity: 750 	 iteration: 7 	 rank: 2
14:42:14 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:14 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:14 DEBUG    no more plants for the rank 2
14:42:14 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1482000.0
        ;
    
14:42:14 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:15 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:16 DEBUG    plant capacity: 750 	 iteration: 8 	 rank: 1
14:42:16 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_750kw;
CREATE TABLE optimal_plant_residual_aggr_750kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_750kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 750 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:16 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 750, geom
        FROM optimal_plant_residual_aggr_750kw
        WHERE methane_total_aggr >= 1482000.0 AND cost_total_aggr > 0 AND rank = 1
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:16 DEBUG    no more plants for the rank 1
14:42:16 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_750kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_750kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_750kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1482000.0
        ;
    
14:42:16 INFO     
        DELETE FROM optimal_plant_residual_750kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_750kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:16 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_750kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_750kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:17 DEBUG    plant capacity: 750 	 iteration: 9 	 rank: 0
14:42:17 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_750kw;
CREATE TABLE optimal_plant_map_750kw AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_750kw AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
14:42:17 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
14:42:18 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
14:42:18 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
14:42:20 INFO     
            INSERT INTO optimal_plant_map_750kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_750kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
14:42:21 INFO     
    DROP TABLE IF EXISTS optimal_plant_residual_500kw;
CREATE TABLE optimal_plant_residual_500kw AS
    SELECT a.id_aggregate, a.id_target, a.id_building, a.length, b.rank, a.plant_capacity, a.manure, a.crop_production, a.live_methane, a.crop_methane, a.methane_total, a.cost_total
    FROM plants_costs AS a
    LEFT JOIN plants_costs_aggregated AS b
    ON a.id_target = b.id_target
    ;
    
14:42:21 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_500kw;
CREATE TABLE optimal_plant_location_500kw AS
    		SELECT  id_target, rank, methane_total, cost_total, geom
            FROM plants_costs_aggregated
            WHERE 0 > 1
            ;
    
14:42:21 INFO     ALTER TABLE optimal_plant_location_500kw ADD COLUMN  plant_capacity int;
14:42:21 INFO     UPDATE optimal_plant_location_500kw a SET plant_capacity = 500;
14:42:21 INFO     ALTER TABLE optimal_plant_location_500kw ADD COLUMN  id_order SERIAL PRIMARY KEY;
14:42:21 INFO     DROP TABLE IF EXISTS optimal_plant_links_500kw;
CREATE TABLE optimal_plant_links_500kw (id_aggregate int, id_target int, id_building int, plant_capacity int);
14:42:21 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:21 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:21 INFO     found plant 
14:42:21 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 3
        AND id_target = 113
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:21 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:22 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:22 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:24 DEBUG    plant capacity: 500 	 iteration: 1 	 rank: 3
14:42:24 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:25 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:25 INFO     found plant 
14:42:25 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:25 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:25 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:25 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:27 DEBUG    plant capacity: 500 	 iteration: 2 	 rank: 3
14:42:27 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:27 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:27 INFO     found plant 
14:42:27 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:27 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:27 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:27 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:29 DEBUG    plant capacity: 500 	 iteration: 3 	 rank: 3
14:42:29 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:29 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:29 INFO     found plant 
14:42:29 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:29 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:29 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:29 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:31 DEBUG    plant capacity: 500 	 iteration: 4 	 rank: 3
14:42:31 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:31 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 3
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:31 DEBUG    no more plants for the rank 3
14:42:31 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:31 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:31 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:32 DEBUG    plant capacity: 500 	 iteration: 5 	 rank: 2
14:42:32 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:32 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:32 INFO     found plant 
14:42:32 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:32 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:32 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:33 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:34 DEBUG    plant capacity: 500 	 iteration: 6 	 rank: 2
14:42:34 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:34 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:34 INFO     found plant 
14:42:34 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:34 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:34 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:34 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:36 DEBUG    plant capacity: 500 	 iteration: 7 	 rank: 2
14:42:36 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:36 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:36 INFO     found plant 
14:42:36 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:36 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:36 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:36 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:37 DEBUG    plant capacity: 500 	 iteration: 8 	 rank: 2
14:42:37 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:37 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:37 INFO     found plant 
14:42:37 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:37 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:37 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:37 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:37 DEBUG    plant capacity: 500 	 iteration: 9 	 rank: 2
14:42:37 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:37 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:37 INFO     found plant 
14:42:37 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:37 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:37 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:38 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:38 DEBUG    plant capacity: 500 	 iteration: 10 	 rank: 2
14:42:38 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:38 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:38 INFO     found plant 
14:42:38 INFO     
    		INSERT INTO optimal_plant_location_500kw (id_target, rank,  methane_total, cost_total, plant_capacity, geom)
    		
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
                ;
        
14:42:38 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:38 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:38 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:38 DEBUG    plant capacity: 500 	 iteration: 11 	 rank: 2
14:42:38 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:38 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 2
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:38 DEBUG    no more plants for the rank 2
14:42:38 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:38 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:39 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:39 DEBUG    plant capacity: 500 	 iteration: 12 	 rank: 1
14:42:39 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_500kw;
CREATE TABLE optimal_plant_residual_aggr_500kw AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_residual_500kw
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr,b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
14:42:39 INFO     
		SELECT id_target, rank, methane_total_aggr, cost_total_aggr, 500, geom
        FROM optimal_plant_residual_aggr_500kw
        WHERE methane_total_aggr >= 1016500.0 AND cost_total_aggr > 0 AND rank = 1
        
        ORDER BY cost_total_aggr ASC
        LIMIT 1
            ;
    
14:42:39 DEBUG    no more plants for the rank 1
14:42:39 INFO     
        WITH
        last_record AS (
            SELECT id_target
            FROM optimal_plant_location_500kw
            ORDER BY id_order DESC
            LIMIT 1
        )
        INSERT INTO optimal_plant_links_500kw (id_aggregate, id_target, id_building, plant_capacity)
        SELECT b.id_aggregate, a.id_target, b.id_building, b.plant_capacity
        FROM last_record AS a, optimal_plant_residual_500kw AS b
        WHERE a.id_target = b.id_target AND methane_total <= 1016500.0
        ;
    
14:42:39 INFO     
        DELETE FROM optimal_plant_residual_500kw AS a
        WHERE EXISTS  (
            SELECT *
            FROM optimal_plant_links_500kw AS b
            WHERE a.id_building = b.id_building
        )
        ;
    
14:42:39 INFO     
        WITH
        costs AS
        (
            SELECT id_aggregate, id_target, id_building, rank, length, plant_capacity, manure, crop_production, live_methane, crop_methane,
            (crop_production * 5) AS cost_harvest,
            ((length / 1000) * crop_production * 6) AS cost_ensiling,
            ((length / 1000) * manure * 0.2) AS cost_manure
            FROM optimal_plant_residual_500kw
        ),
        total AS (
            SELECT *,
            CASE
                WHEN cost_manure is not null THEN cost_manure + cost_harvest + cost_ensiling
                ELSE cost_harvest + cost_ensiling
            END AS cost_total,
            COALESCE (live_methane, 0) + crop_methane AS methane_total
            FROM costs
        )
        UPDATE optimal_plant_residual_500kw AS a
        SET methane_total = b.methane_total,
            cost_total = b.cost_total
        FROM total AS b
        WHERE a.id_aggregate = b.id_aggregate
            ;
    
14:42:39 DEBUG    plant capacity: 500 	 iteration: 13 	 rank: 0
14:42:39 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_500kw;
CREATE TABLE optimal_plant_map_500kw AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_500kw AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
14:42:40 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
14:42:41 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
14:42:41 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
14:42:43 INFO     
            INSERT INTO optimal_plant_map_500kw (id_aggregate, id_target, id_building, plant_capacity, farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_500kw AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
