16:35:24 WARNING  is when this event was logged.
16:35:24 INFO     
    DROP TABLE IF EXISTS optimal_plant_resources_residual_all;
CREATE TABLE optimal_plant_resources_residual_all AS
    SELECT a.id_aggregate, a.id_target, a.id_building, a.length, b.rank, a.plant_capacity, a.manure, a.crop_production, a.live_methane, a.crop_methane, a.methane_total, a.cost_total
    FROM plants_costs AS a
    LEFT JOIN plants_costs_aggregated AS b
    ON a.id_target = b.id_target
    ORDER BY a.id_target, a.plant_capacity DESC, a.methane_total DESC, a.cost_total
    ;
    
16:35:26 INFO     
        DROP TABLE IF EXISTS optimal_plant_resources_allocated_all;
CREATE TABLE optimal_plant_resources_allocated_all AS
    		SELECT  * FROM optimal_plant_resources_residual_all WHERE 0 > 1
            ;
    
16:35:26 INFO     
        DROP TABLE IF EXISTS optimal_plant_location_all;
CREATE TABLE optimal_plant_location_all (
            id_order SERIAL PRIMARY KEY, id_target int, plant_capacity int, rank int,
            live_methane_req double precision, crop_methane_req double precision,
            methane_required double precision, live_methane_used double precision,
            crop_methane_used double precision, methane_used double precision,
            cost_total double precision
        );
    
16:35:26 INFO     SELECT AddGeometryColumn ('public', 'optimal_plant_location_all','geom', 3035, 'POINT', 2);
16:35:26 INFO     
        DROP TABLE IF EXISTS optimal_plant_links_all;
CREATE TABLE optimal_plant_links_all (
            id_aggregate int, id_target int, id_building int, plant_capacity int, length double precision,
            manure_used double precision, live_methane_used double precision,
            crop_used double precision, crop_methane_used double precision,
            methane_used double precision,
            cost_total double precision
        );
    
16:35:26 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:26 INFO     SELECT * FROM optimal_plant_links_all
16:35:26 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
             AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:26 INFO     found plant 
16:35:26 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
             AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:26 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:26 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:26 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:26 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:27 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:27 DEBUG    plant capacity: 500 	 iteration: 1 	 rank: 3
16:35:27 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:27 INFO     SELECT * FROM optimal_plant_links_all
16:35:27 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:27 INFO     found plant 
16:35:27 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:27 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:27 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:27 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:27 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:28 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:28 DEBUG    plant capacity: 500 	 iteration: 2 	 rank: 3
16:35:28 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:28 INFO     SELECT * FROM optimal_plant_links_all
16:35:28 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:28 INFO     found plant 
16:35:28 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:28 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:28 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:28 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:28 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:29 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:29 DEBUG    plant capacity: 500 	 iteration: 3 	 rank: 3
16:35:29 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:29 INFO     SELECT * FROM optimal_plant_links_all
16:35:29 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:29 INFO     found plant 
16:35:29 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:29 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:29 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:29 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:29 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:30 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:30 DEBUG    plant capacity: 500 	 iteration: 4 	 rank: 3
16:35:30 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:30 INFO     SELECT * FROM optimal_plant_links_all
16:35:30 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:30 INFO     found plant 
16:35:30 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:30 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:30 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:30 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:30 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:30 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:31 DEBUG    plant capacity: 500 	 iteration: 5 	 rank: 3
16:35:31 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:31 INFO     SELECT * FROM optimal_plant_links_all
16:35:31 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:31 INFO     found plant 
16:35:31 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:31 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:31 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:31 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:31 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:31 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:31 DEBUG    plant capacity: 500 	 iteration: 6 	 rank: 3
16:35:31 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:32 INFO     SELECT * FROM optimal_plant_links_all
16:35:32 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:32 DEBUG    no more plants for the rank 3
16:35:32 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:32 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:32 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:32 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:32 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:32 DEBUG    plant capacity: 500 	 iteration: 7 	 rank: 2
16:35:32 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:32 INFO     SELECT * FROM optimal_plant_links_all
16:35:32 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:32 INFO     found plant 
16:35:32 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:32 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:32 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:32 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:32 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:33 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:33 DEBUG    plant capacity: 500 	 iteration: 8 	 rank: 2
16:35:33 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:33 INFO     SELECT * FROM optimal_plant_links_all
16:35:33 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:33 INFO     found plant 
16:35:33 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:33 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:33 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:33 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:33 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:33 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:33 DEBUG    plant capacity: 500 	 iteration: 9 	 rank: 2
16:35:33 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:33 INFO     SELECT * FROM optimal_plant_links_all
16:35:34 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:34 INFO     found plant 
16:35:34 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:34 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:34 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:34 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:34 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:34 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:34 DEBUG    plant capacity: 500 	 iteration: 10 	 rank: 2
16:35:34 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:34 INFO     SELECT * FROM optimal_plant_links_all
16:35:34 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:34 INFO     found plant 
16:35:34 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:34 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:34 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:34 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:34 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:34 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:35 DEBUG    plant capacity: 500 	 iteration: 11 	 rank: 2
16:35:35 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:35 INFO     SELECT * FROM optimal_plant_links_all
16:35:35 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:35 INFO     found plant 
16:35:35 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:35 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:35 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:35 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:35 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:35 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:35 DEBUG    plant capacity: 500 	 iteration: 12 	 rank: 2
16:35:35 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:35 INFO     SELECT * FROM optimal_plant_links_all
16:35:35 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:35 INFO     found plant 
16:35:35 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:35 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:35 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:35 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:35 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:35 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:36 DEBUG    plant capacity: 500 	 iteration: 13 	 rank: 2
16:35:36 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:36 INFO     SELECT * FROM optimal_plant_links_all
16:35:36 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:36 DEBUG    no more plants for the rank 2
16:35:36 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:36 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:36 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:36 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:36 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:36 DEBUG    plant capacity: 500 	 iteration: 14 	 rank: 1
16:35:36 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 500 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:36 INFO     SELECT * FROM optimal_plant_links_all
16:35:36 INFO     
    		SELECT a.id_target, a.rank, 500 AS plant_capacity,
            1070000 * 0.3 AS live_methane_req,
            1070000 * 0.7 AS crop_methane_req,
            1070000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 1070000 AND a.cost_total_aggr > 0  AND a.rank = 1
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:36 DEBUG    no more plants for the rank 1
16:35:36 ERROR    __________CHANGED PLANT CAPACITY HERE_________
16:35:36 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            500 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:36 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:36 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:36 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:36 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:36 DEBUG    plant capacity: 500 	 iteration: 15 	 rank: 0
16:35:36 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:36 INFO     SELECT * FROM optimal_plant_links_all
16:35:37 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 3
            AND a.id_target != ALL (b.array_targets) AND a.id_target = 113
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:37 DEBUG    no more plants for the rank 3
16:35:37 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:37 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:37 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:37 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:37 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:37 DEBUG    plant capacity: 100 	 iteration: 1 	 rank: 2
16:35:37 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:37 INFO     SELECT * FROM optimal_plant_links_all
16:35:37 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:37 INFO     found plant 
16:35:37 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:37 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:37 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:37 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:37 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:37 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:37 DEBUG    plant capacity: 100 	 iteration: 2 	 rank: 2
16:35:37 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:37 INFO     SELECT * FROM optimal_plant_links_all
16:35:37 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:37 INFO     found plant 
16:35:37 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:37 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:37 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:37 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:37 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:38 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:38 DEBUG    plant capacity: 100 	 iteration: 3 	 rank: 2
16:35:38 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:38 INFO     SELECT * FROM optimal_plant_links_all
16:35:38 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:38 INFO     found plant 
16:35:38 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:38 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:38 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:38 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:38 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:38 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:38 DEBUG    plant capacity: 100 	 iteration: 4 	 rank: 2
16:35:38 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:38 INFO     SELECT * FROM optimal_plant_links_all
16:35:38 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:38 INFO     found plant 
16:35:38 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:38 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:38 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:38 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:38 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:38 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:38 DEBUG    plant capacity: 100 	 iteration: 5 	 rank: 2
16:35:38 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:39 INFO     SELECT * FROM optimal_plant_links_all
16:35:39 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:39 INFO     found plant 
16:35:39 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:39 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:39 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:39 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:39 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:39 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:39 DEBUG    plant capacity: 100 	 iteration: 6 	 rank: 2
16:35:39 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:39 INFO     SELECT * FROM optimal_plant_links_all
16:35:39 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:39 INFO     found plant 
16:35:39 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:39 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:39 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:39 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:39 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:39 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:39 DEBUG    plant capacity: 100 	 iteration: 7 	 rank: 2
16:35:39 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:39 INFO     SELECT * FROM optimal_plant_links_all
16:35:39 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:39 INFO     found plant 
16:35:39 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:39 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:39 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:39 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:39 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:40 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:40 DEBUG    plant capacity: 100 	 iteration: 8 	 rank: 2
16:35:40 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:40 INFO     SELECT * FROM optimal_plant_links_all
16:35:40 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:40 INFO     found plant 
16:35:40 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:40 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:40 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:40 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:40 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:40 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:40 DEBUG    plant capacity: 100 	 iteration: 9 	 rank: 2
16:35:40 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:40 INFO     SELECT * FROM optimal_plant_links_all
16:35:40 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:40 INFO     found plant 
16:35:40 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:40 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:40 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:40 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:40 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:40 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:40 DEBUG    plant capacity: 100 	 iteration: 10 	 rank: 2
16:35:40 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:40 INFO     SELECT * FROM optimal_plant_links_all
16:35:40 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:40 INFO     found plant 
16:35:40 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:40 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:40 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:40 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:40 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:40 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:40 DEBUG    plant capacity: 100 	 iteration: 11 	 rank: 2
16:35:40 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:40 INFO     SELECT * FROM optimal_plant_links_all
16:35:40 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:40 INFO     found plant 
16:35:40 INFO     
    		INSERT INTO optimal_plant_location_all (id_target, rank, plant_capacity, live_methane_req, crop_methane_req, methane_required, geom)
    		
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
                ;
        
16:35:40 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:40 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:40 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:40 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:40 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:41 DEBUG    plant capacity: 100 	 iteration: 12 	 rank: 2
16:35:41 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:41 INFO     SELECT * FROM optimal_plant_links_all
16:35:41 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 2
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:41 DEBUG    no more plants for the rank 2
16:35:41 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:41 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:41 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:41 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:41 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:41 DEBUG    plant capacity: 100 	 iteration: 13 	 rank: 1
16:35:41 INFO     
        DROP TABLE IF EXISTS optimal_plant_residual_aggr_all;
CREATE TABLE optimal_plant_residual_aggr_all AS
        WITH
        aggregated AS (
            SELECT id_target,
            SUM (methane_total) AS methane_total_aggr,
            SUM (cost_total) AS cost_total_aggr
            FROM optimal_plant_resources_residual_all
            GROUP BY id_target
            ORDER BY id_target
        )
        SELECT a.id_target, b.rank, 100 AS plant_capacity, a.methane_total_aggr, a.cost_total_aggr, b.geom
        FROM aggregated AS a
        LEFT JOIN site_clean AS b ON a.id_target = b.id_target
        ORDER BY b.rank DESC, a.methane_total_aggr DESC, a.cost_total_aggr ASC
            ;
    
16:35:41 INFO     SELECT * FROM optimal_plant_links_all
16:35:41 INFO     
    		SELECT a.id_target, a.rank, 100 AS plant_capacity,
            224000 * 0.3 AS live_methane_req,
            224000 * 0.7 AS crop_methane_req,
            224000 AS methane_required,
            a.geom
            FROM optimal_plant_residual_aggr_all AS a, (SELECT array_agg(distinct id_target) as array_targets FROM optimal_plant_links_all) AS b
            WHERE a.methane_total_aggr >= 224000 AND a.cost_total_aggr > 0  AND a.rank = 1
            AND a.id_target != ALL (b.array_targets) 
            ORDER BY a.cost_total_aggr ASC
            LIMIT 1
            ;
        
16:35:41 DEBUG    no more plants for the rank 1
16:35:41 ERROR    __________CHANGED PLANT CAPACITY HERE_________
16:35:41 INFO     
        WITH
        last_record AS (
            SELECT id_target, live_methane_req, crop_methane_req
            FROM optimal_plant_location_all
            ORDER BY id_order DESC
            LIMIT 1
        ),
        manure AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.manure, a.live_methane, b.live_methane_req,
                SUM (a.live_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS live_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.live_methane > 0
                ) AS f
            WHERE live_methane_aggregated <= (live_methane_req)
        ),
        crop AS (
            SELECT *
            FROM (
                SELECT a.id_aggregate, a.id_building, a.id_target, a.length, a.crop_production, a.crop_methane, b.crop_methane_req,
                SUM (a.crop_methane) OVER (PARTITION BY a.id_target ORDER BY a.length ASC) AS crop_methane_aggregated
                FROM optimal_plant_resources_residual_all AS a, last_record AS b
                WHERE a.id_target = b.id_target AND a.crop_production > 0
                ) AS f
            WHERE crop_methane_aggregated <= (crop_methane_req)
        ),
        cost_total AS (
            SELECT a.id_aggregate, a.cost_total
            FROM optimal_plant_resources_residual_all AS a, crop AS b
            WHERE a.id_aggregate = b.id_aggregate
        )
        INSERT INTO optimal_plant_links_all (
            id_aggregate, id_target, id_building, plant_capacity, length,
            manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total
            )
        SELECT
            p.id_aggregate, p.id_target, p.id_building,
            100 AS plant_capacity,  p.length,
            r.manure AS manure_used, p.crop_production AS crop_used,
            r.live_methane AS live_methane_used, p.crop_methane AS crop_methane_used,
            COALESCE(r.live_methane,0) + COALESCE(p.crop_methane,0) AS methane_used,
            s.cost_total
        FROM crop AS p
        LEFT JOIN manure AS r ON p.id_aggregate = r.id_aggregate
        LEFT JOIN cost_total AS s ON p.id_aggregate = s.id_aggregate

        ;
    
16:35:41 INFO     
        WITH
        aggretate AS (
            SELECT id_target,
            SUM (live_methane_used) AS live_methane_used,
            SUM (crop_methane_used) AS crop_methane_used,
            SUM (methane_used) AS methane_used,
            SUM (cost_total) AS cost_total
            FROM optimal_plant_links_all
            GROUP BY id_target
            ORDER BY id_target
        )
        UPDATE optimal_plant_location_all AS a
        SET live_methane_used = b.live_methane_used,
            crop_methane_used = b.crop_methane_used,
            methane_used = b.methane_used,
            cost_total = b.cost_total
        FROM aggretate AS b
        WHERE a.id_target = b.id_target
        ;
    
16:35:41 INFO     
        INSERT INTO optimal_plant_resources_allocated_all
        SELECT a.*
        FROM optimal_plant_resources_residual_all AS a, optimal_plant_links_all AS b
        WHERE a.id_building = b.id_building AND a.id_target = b.id_target
        ;
    
16:35:41 INFO     
        UPDATE optimal_plant_resources_residual_all AS a
        SET
            manure = a.manure - b.manure,
            crop_production = a.crop_production - b.crop_production,
            live_methane = a.live_methane - b.live_methane,
            crop_methane = a.crop_methane - b.crop_methane,
            methane_total = a.methane_total - b.methane_total,
            cost_total = a.cost_total - b.cost_total
        FROM optimal_plant_resources_allocated_all AS b
        WHERE a.id_building = b.id_building
        ;
    
16:35:41 INFO     
        DELETE FROM optimal_plant_resources_residual_all
        WHERE methane_total = 0 or methane_total is null
        ;
    
16:35:41 DEBUG    plant capacity: 100 	 iteration: 14 	 rank: 0
16:35:41 INFO     
        DROP TABLE IF EXISTS optimal_plant_map_all;
CREATE TABLE optimal_plant_map_all AS
        SELECT a.*, b.geom AS farms, c.geom AS route
        FROM optimal_plant_links_all AS a
        LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
        LEFT JOIN route_distance_50km_250__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
        ;
    
16:35:42 INFO     
            INSERT INTO optimal_plant_map_all (
                id_aggregate, id_target, id_building, plant_capacity, length,
                manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total,
                farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_all AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
16:35:42 INFO     
            INSERT INTO optimal_plant_map_all (
                id_aggregate, id_target, id_building, plant_capacity, length,
                manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total,
                farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_all AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_750__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
16:35:43 INFO     
            INSERT INTO optimal_plant_map_all (
                id_aggregate, id_target, id_building, plant_capacity, length,
                manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total,
                farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_all AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_1500__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
16:35:44 INFO     
            INSERT INTO optimal_plant_map_all (
                id_aggregate, id_target, id_building, plant_capacity, length,
                manure_used, crop_used, live_methane_used, crop_methane_used, methane_used, cost_total,
                farms, route)
            SELECT a.*, b.geom AS farms, c.geom AS route
            FROM optimal_plant_links_all AS a
            LEFT JOIN farm_buildings_biomass AS b  ON a.id_building = b.id_building
            LEFT JOIN route_distance_50km_2000__ AS c  ON a.id_building = c.id_building AND a.id_target = c.id_target
            ;
        
